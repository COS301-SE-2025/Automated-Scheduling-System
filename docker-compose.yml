services:
  app:
    build:
      context: .
      dockerfile: internal/Dockerfile.internal
    restart: unless-stopped
    ports:
      - ${PORT:-8080}:8080
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT:-8080}
      BLUEPRINT_DB_HOST: scheduling_db
      BLUEPRINT_DB_PORT: ${BLUEPRINT_DB_PORT:-5432}
      BLUEPRINT_DB_DATABASE: ${BLUEPRINT_DB_DATABASE}
      BLUEPRINT_DB_USERNAME: ${BLUEPRINT_DB_USERNAME}
      BLUEPRINT_DB_PASSWORD: ${BLUEPRINT_DB_PASSWORD}
      BLUEPRINT_DB_SCHEMA: ${BLUEPRINT_DB_SCHEMA}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on:
      scheduling_db:
        condition: service_healthy
    networks:
      - scheduling_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      target: frontend
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - 5173:5173 #Dockerfile.frontend always uses port 5173 
    networks:
      - scheduling_network

  scheduling_db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${BLUEPRINT_DB_DATABASE}
      POSTGRES_USER: ${BLUEPRINT_DB_USERNAME}
      POSTGRES_PASSWORD: ${BLUEPRINT_DB_PASSWORD}
    ports:
      - "${BLUEPRINT_DB_PORT:-5432}:5432"
    volumes:
      - scheduling_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${BLUEPRINT_DB_USERNAME} -d ${BLUEPRINT_DB_DATABASE}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - scheduling_network

volumes:
  scheduling_db_data:
networks:
  scheduling_network:
